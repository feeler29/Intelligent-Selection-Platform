# Generated by Django 2.0.5 on 2018-11-14 09:01

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EngineVersions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frequency', models.IntegerField(choices=[(50, '50Hz'), (60, '60Hz')], default=50)),
                ('NOx', models.CharField(choices=[('ultralow', '<50mg/m3'), ('low', '<250mg/m3'), ('middle', '<500mg/m3'), ('high', '>500mg/m3')], default='middle', max_length=100)),
            ],
            options={
                'ordering': ['gas_type__name', 'version__electrical_output'],
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, choices=[('N', 'Natural gas'), ('BL', 'Biogas/sewage gas/landfill gas'), ('APG', 'Flaregas'), ('C', 'Coalmine gas'), ('HD', 'HD-5 Propane')], default='N', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, choices=[('JEN', 'Jenbacher'), ('WAU', 'Waukesha'), ('SIE', 'Siemens'), ('SOL', 'Solar')], default='JEN', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Version',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('energy_input', models.IntegerField()),
                ('mechanical_output', models.IntegerField()),
                ('electrical_output', models.IntegerField()),
                ('thermal_output', models.IntegerField()),
                ('electrical_efficiency', models.FloatField()),
                ('thermal_efficiency', models.FloatField()),
                ('total_efficiency', models.FloatField()),
                ('NOx_emission', models.IntegerField()),
                ('ICWT', models.IntegerField(help_text='intercooler water temperature')),
                ('CR', models.IntegerField(help_text='compression ratio')),
                ('engine_speed', models.IntegerField()),
            ],
        ),
        migrations.AddField(
            model_name='engineversions',
            name='gas_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='enginedata.Genre'),
        ),
        migrations.AddField(
            model_name='engineversions',
            name='manufacturer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='enginedata.Manufacturer'),
        ),
        migrations.AddField(
            model_name='engineversions',
            name='version',
            field=models.OneToOneField(help_text='Engine version number', on_delete=django.db.models.deletion.CASCADE, to='enginedata.Version'),
        ),
    ]
